# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

stages:
- gitlab-test
- lint
- sonarqube
- test
- publish

###############################################################################
#################### actions
###############################################################################

variables:
  ANSIBLE_FORCE_COLOR: "true"
  PY_COLORS: "1"
  #
  DOCKER_IMAGE_SONAR_SCANNER_CLI: "robincbz/alpine-sonarcli:latest"
  DOCKER_IMAGE_DOCKER_DIND_MOLECULE: robincbz/docker-dind-molecule:latest
  DOCKER_IMAGE_DOCKER_DIND_ANSIBLE: robincbz/docker-dind-ansible:latest
  DOCKER_IMAGE_ALPINE_GIT: robincbz/alpine-git:latest
  DOCKER_IMAGE_ANSIBLE_LINT: robincbz/alpine-ansiblelint:latest
  DOCKER_IMAGE_JINJA_LINT: robincbz/alpine-jinjalint:latest
  DOCKER_IMAGE_YAML_LINT: robincbz/alpine-yamllint:latest
  DOCKER_IMAGE_DEBIAN_11_ANSIBLE: robincbz/debian-11-ansible:latest
  DOCKER_IMAGE_DEBIAN_12_ANSIBLE: robincbz/debian-12-ansible:latest
  DOCKER_IMAGE_UBUNTU_22_ANSIBLE: robincbz/ubuntu-22-ansible:latest
  DOCKER_IMAGE_ALPINE_RELEASE_CLI: "robincbz/alpine-releasecli:latest"

###############################################################################
#################### EXTENDABLES
###############################################################################

.molecule_test: &molecule_test
  image: $NEXUS_REPOS_DOCKER_REGISTRY/$DOCKER_IMAGE_DOCKER_DIND_MOLECULE
  stage: test
  before_script:
    - "export DOCKER_CLIENT_TIMEOUT=180"
    - "export COMPOSE_HTTP_TIMEOUT=180"
    - "docker login -u \"$NEXUS_REPOS_USERNAME\" -p \"$NEXUS_REPOS_PASSWORD\" \"http://$NEXUS_REPOS_DOCKER_REGISTRY\""
    - "python3 -m compileall /usr/lib/python3 -qq"
    - "cp ./.ansible.cfg /root/.ansible.cfg"
    # Fix weird ansible bug: https://github.com/trailofbits/algo/issues/1637
    # This probably happens due to gitlab-runner mounting the git repo into the container
    - "chmod o-w ."
    - "[ -f \"./molecule/$SCENARIO/requirements.yml\" ] && ansible-galaxy install -r ./molecule/$SCENARIO/requirements.yml --roles-path=./molecule/$SCENARIO/roles"
  script:
    - "molecule test --scenario-name $SCENARIO"
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_MESSAGE=~/^[^Merge]/ && $CI_COMMIT_BRANCH == "develop"'
  needs:
    - "yaml_lint"
    #- "jinja_lint"
    - "ansible_lint"

###############################################################################
#################### CICD
###############################################################################

# As a GitLab ci, we use the default template :)
sast:
  stage: gitlab-test
include:
- template: Security/SAST.gitlab-ci.yml
  allow_failure: false
